!function (a) { a.fn.paginationAjax = function (e, i, t) { if (!e || "string" != typeof e) return console.error('Необхідний параметр {string} "pageDataUrl". Вказати URL сторінки з даними.'), this; if (!i || "number" != typeof i) return console.error('Необхідний параметр {number} "totalPages". Вказати загальну кількість сторінок.'), this; if (!t || "object" != typeof t) return console.error('Необхідний параметр {object} "options". Вказати об\'єкт з налаштуваннями (він може бути пустим).'), this; var n = this, o = { allPages: { create: function (e, i) { if (a(n).empty(), i <= 1) return !1; for (var t = a("<ul/>", { class: "pagination" }).css("display", "block"), o = a("<a/>", { class: "page", "data-page": 1 }).on("click", d), r = 1; r <= i; r++) { var g = o.clone(!0).attr("data-page", r).text(r); t.append(a("<li/>").append(g)) } t.find("a[data-page='" + e + "']").parent("li").addClass("active"), a(n).append(t), p.loadMoreButton && a("<button/>", { class: "btn btn-lg btn-primary", id: "load-more", text: l[p.language].loadMore }).on("click", s).insertBefore(n) }, afterLoadPage: function (e) { var t = a("ul.pagination > li > a[data-page='" + e + "']"); a("ul.pagination > li.active").removeClass("active"), a(t).parent().addClass("active"), p.loadMoreButton && (+e === i ? a("#load-more").hide() : a("#load-more").show()) }, afterLoadMore: function (e) { a("ul.pagination > li.active").next().addClass("active"), +e === i && a("#load-more").hide() } }, allPagesShrink: { data: { prevWidth: a(n).width() }, create: function (e, i) { if (a(n).empty(), i <= 1) return !1; var t = a("<ul/>", { class: "pagination" }).css("display", "block"), r = a("<a/>", { class: "page", "data-page": 1 }).on("click", d), g = a("<li/>").append(a("<div/>", { class: "dropup btn-group", style: "display:block" }).append(a("<button/>", { class: "btn dropdown-toggle", type: "button", "data-toggle": "dropdown", text: "..." }))), u = p.visiblePagesCount, f = i, c = i; u >= i ? u = i : u % 2 == 0 ? (f = u / 2 - 1, c = u / 2) : f = c = parseInt(u / 2); var v = e - f > 0 ? e - f : 1, h = e + c < i ? e + c : i; u < i && (v = (h = e - v < f ? h + (f - e + 1) : h) - e < c ? v - (c - (h - e)) : v), e > 1 && a("<li/>").append(r.clone(!0).attr("data-page", e - 1).addClass("page-nav page-prev").text("<")).appendTo(t), y(1, v); for (var b = v; b <= h; b++)a("<li/>").append(r.clone(!0).attr("data-page", b).text(b)).appendTo(t); function y(e, i) { for (var n = a("<ul/>", { class: "dropdown-menu" }), o = e; o < i; o++)n.append(a("<li/>").append(r.clone(!0).attr("data-page", o).text(o))); var l = g.clone(!0); l.appendTo(t).find("div.dropup").append(n), l.find(n).children("li").length || l.hide() } y(h + 1, i + 1), e < i && a("<li/>").append(r.clone(!0).attr("data-page", e + 1).addClass("page-nav page-next").text(">")).appendTo(t), t.find("a[data-page='" + e + "']").parent("li").addClass("active"), t.appendTo(n), p.loadMoreButton && e !== i && a("<button/>", { class: "btn btn-lg btn-primary", id: "load-more", text: l[p.language].loadMore }).on("click", s).insertBefore(a(n).children("ul.pagination")), p.paginationStyleFlexible && (a(window).off("resize", o[p.paginationStyle].resize), a(window).on("resize", o[p.paginationStyle].resize), a(n).trigger("resize", [!0])) }, resize: function (e, i) { i = void 0 !== i && i; var t = a(n).width(); if (o.allPagesShrink.data.prevWidth === t && !i) return !1; var l = a(n).find("> ul.pagination > li:visible > a:not(.page-nav)").parent("li:visible"), r = a(n).find("> ul.pagination > li:visible"), d = a(n).find("> ul.pagination > li.active:visible").last(), s = a("ul.pagination li:has(div.dropup)").first(), g = a("ul.pagination li:has(div.dropup)").last(); function u() { if (r.last().position().top > r.first().position().top) for (; r.last().position().top > r.first().position().top && 1 !== l.length;) { var e = d.prevAll("li:has(> a:not(.page-nav))"), i = d.nextAll("li:has(> a:not(.page-nav))"), t = i.length <= e.length; t ? d.is(l.first()) || s.show().find("ul").append(l.first()) : d.is(l.last()) || g.show().find("ul").prepend(l.last()), l = a(n).find("> ul.pagination > li:visible > a:not(.page-nav)").parent("li:visible"), r = a(n).find("> ul.pagination > li:visible") } } function f() { for (; s.find("ul > li").length || g.find("ul > li").length;) { var e = d.prevAll("li:has(> a:not(.page-nav))"), i = d.nextAll("li:has(> a:not(.page-nav))"), t = i.length > e.length; if (t = !(t = !(t && !s.find("ul > li").length) && t) && !g.find("ul > li").length || t) { var o = s.find("ul > li").last().insertBefore(l.first()); if ((r = a(n).find("> ul.pagination > li:visible")).last().position().top > r.first().position().top) { s.find("ul").append(o); break } s.find("ul > li").length || s.hide() } else { var o = g.find("ul > li").first().insertAfter(l.last()); if ((r = a(n).find("> ul.pagination > li:visible")).last().position().top > r.first().position().top) { g.find("ul").prepend(o); break } g.find("ul > li").length || g.hide() } l = a(n).find("> ul.pagination > li:visible > a:not(.page-nav)").parent("li:visible") } } i && (f(), u()), o.allPagesShrink.data.prevWidth > t ? u() : f(), o.allPagesShrink.data.prevWidth = t, p.visiblePagesCount = l.length }, afterLoadPage: function (a) { o[p.paginationStyle].create(a, i) }, afterLoadMore: function (e) { var t = p.visiblePagesCount, o = i; t >= i ? t = i : o = t % 2 == 0 ? t / 2 - 1 : parseInt(t / 2); var l = a("ul.pagination > li > a.page:not(.page-nav)").parent("li"); if (e > o + 1) { var r = a("ul.pagination li:has(div.dropup)").last(); r.find("ul > li").first().insertAfter(l.last()), l = a("ul.pagination > li > a.page:not(.page-nav)").parent("li"), r.find("ul.dropdown-menu li").length || r.hide(), l.length > t && a("ul.pagination li:has(div.dropup)").first().show().find("ul").append(l.first()) } a("ul.pagination > li > a:not(.page-nav)[data-page='" + e + "']").parent("li").addClass("active"), a("ul.pagination > li a.page-next").attr("data-page", e + 1), +e === i && (a("#load-more").hide(), a("ul.pagination > li a.page-next").parent("li").hide()), p.paginationStyleFlexible && a(n).trigger("resize", [!0]) } } }, l = { "uk-UA": { loadMore: "Завантажити ще" }, "ru-RU": { loadMore: "Загрузить еще" }, "en-US": { loadMore: "Load more" } }, r = { dataElementSelector: "#pageData", urlParameters: {}, language: "uk-UA", beforeLoadPage: a.noop, afterLoadPageSuccess: a.noop, afterLoadPageError: a.noop, loadMoreButton: !1, beforeLoadMore: a.noop, afterLoadMoreSuccess: a.noop, afterLoadMoreError: a.noop, dontLoadActiveOrDisabledPage: !0, paginationStyle: "allPages", paginationStyleFlexible: !1, visiblePagesCount: 5 }, p = a.extend({}, r, t); return o.hasOwnProperty(p.paginationStyle) ? (o[p.paginationStyle].create(1, i), this) : (console.error("Стилю з назвою " + p.paginationStyle + " не існує."), this); function d(e) { if (p.dontLoadActiveOrDisabledPage && (a(this).parent().hasClass("active") || a(this).parent().hasClass("disabled"))) return !1; var i = a(this).data("page"); p.beforeLoadPage(), g(i, !1, function () { o[p.paginationStyle].afterLoadPage(i), p.afterLoadPageSuccess() }, p.afterLoadPageError) } function s(e) { if (p.dontLoadActiveOrDisabledPage && (a(this).hasClass("active") || a(this).hasClass("disabled"))) return !1; var i = a("ul.pagination > li.active > a").last().data("page") + 1; p.beforeLoadMore(), g(i, !0, function () { o[p.paginationStyle].afterLoadMore(i), p.afterLoadMoreSuccess() }, p.afterLoadMoreError) } function g(i, t, n, o) { n = void 0 === n ? a.noop : n, o = void 0 === o ? a.noop : o; var l = a.extend({ page: i }, p.urlParameters); a.ajax({ type: "GET", url: e + "?" + a.param(l), success: function (e) { t || a(p.dataElementSelector).empty(), a(p.dataElementSelector).append(e), n() }, error: function () { o() } }) } } }(jQuery);